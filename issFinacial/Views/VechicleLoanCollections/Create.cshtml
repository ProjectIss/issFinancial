@model issFinacial.Models.VechicleLoanCollection

@{
    ViewBag.Title = "Create";
}

<div class="page-header page-header-light">
    <div class="page-header-content header-elements-lg-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-arrow-left52 mr-2"></i> <span class="font-weight-semibold">VehicleLoanCollection</span> - Create</h4>
            <a href="#" class="header-elements-toggle text-body d-lg-none"><i class="icon-more"></i></a>
        </div>
        <div class="header-elements d-none">
            <div class="d-flex justify-content-center">
                <a href="#" class="btn btn-link btn-float font-size-sm font-weight-semibold text-body">
                    <i class="icon-bars-alt text-pink"></i>
                    <span>Statistics</span>
                </a>
                <a href="#" class="btn btn-link btn-float font-size-sm font-weight-semibold text-body">
                    <i class="icon-calculator text-pink"></i>
                    <span>Invoices</span>
                </a>
                <a href="#" class="btn btn-link btn-float font-size-sm font-weight-semibold text-body">
                    <i class="icon-calendar5 text-pink"></i>
                    <span>Schedule</span>
                </a>
            </div>
        </div>
    </div>
    <div class="breadcrumb-line breadcrumb-line-light header-elements-lg-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a href="index.html" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Dashboard</a>
                <span class="breadcrumb-item active">VehicleLoanCollection</span>
            </div>
            <a href="#" class="header-elements-toggle text-body d-lg-none"><i class="icon-more"></i></a>
        </div>
        <div class="header-elements d-none">
            <div class="breadcrumb justify-content-center">
                <a href="#" class="breadcrumb-elements-item">
                    <i class="icon-comment-discussion mr-2"></i>
                    Support
                </a>
                <div class="breadcrumb-elements-item dropdown p-0">
                    <a href="#" class="breadcrumb-elements-item dropdown-toggle" data-toggle="dropdown">
                        <i class="icon-gear mr-2"></i>
                        Settings
                    </a>
                    <div class="dropdown-menu dropdown-menu-right">
                        <a href="#" class="dropdown-item"><i class="icon-user-lock"></i> Account security</a>
                        <a href="#" class="dropdown-item"><i class="icon-statistics"></i> Analytics</a>
                        <a href="#" class="dropdown-item"><i class="icon-accessibility"></i> Accessibility</a>
                        <div class="dropdown-divider"></div>
                        <a href="#" class="dropdown-item"><i class="icon-gear"></i> All settings</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<br />

<div class="content">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="card">
                    <div class="card-header header-elements-inline">
                        <h5 class="card-title">VehicleLoanCollection</h5>
                        <div class="header-elements">
                            <div class="list-icons">
                                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                    <div class="card-body" style="border: 1px solid #0c5ade;">

                        <div class="row">
                            <div class="col-md-12">
                                <div class="row">

                                    <div class="form-group col-md-4">
                                        <label>Collection Id</label>
                                        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-md-4">
                                        <label>Collection Date</label>
                                        @Html.EditorFor(model => model.CollectionDate, new { htmlAttributes = new { @class = "form-control",@id= "CollectionDate" } })
                                        @Html.ValidationMessageFor(model => model.CollectionDate, "", new { @class = "text-danger" })
                                    </div>
                                   <div class="form-group col-md-4">
                                        <label>Payment Type</label>
                                        @Html.DropDownList("advanceEmi", new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="Cash", Value="Check"},
                                            new SelectListItem{ Text="E-Transfer", Value="Check"}
                                        }, "--- Select ---", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>vehicle Loan Id</label>
                                            @Html.DropDownList("vehicleLoanId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.vehicleLoanId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Name</label>
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", @id = "Name" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Address</label>
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control",@id = "Address" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>Phone No</label>
                                            @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", @id = "PhoneNo" } })
                                            @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Vechicle Number</label>
                                            @Html.EditorFor(model => model.VechicleNumber, new { htmlAttributes = new { @class = "form-control",@id= "VechicleNumber" } })
                                            @Html.ValidationMessageFor(model => model.VechicleNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Vechicle Make</label>
                                            @Html.EditorFor(model => model.VehicleMake, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.VehicleMake, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row">

                                        <div class="form-group col-md-4">
                                            <label>Number Of Installment</label>
                                            @Html.EditorFor(model => model.NumberOfInstallmentsId, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NumberOfInstallmentsId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Select Due Number</label>
                                            @Html.EditorFor(model => model.SelectDueNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SelectDueNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Due Date</label>
                                            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control",@id= "DueDate" } })
                                            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row">

                                        <div class="form-group col-md-4">
                                            <label>Principle Amount</label>
                                            @Html.EditorFor(model => model.PrincipleAmount, new { htmlAttributes = new { @class = "form-control",@id= "PrincipleAmount" } })
                                            @Html.ValidationMessageFor(model => model.PrincipleAmount, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Intrest Amount</label>
                                            @Html.EditorFor(model => model.IntrestAmount, new { htmlAttributes = new { @class = "form-control",@id= "IntrestAmount" } })
                                            @Html.ValidationMessageFor(model => model.IntrestAmount, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Due Amount</label>
                                            @Html.EditorFor(model => model.DueAmount, new { htmlAttributes = new { @class = "form-control",@id= "DueAmount" } })
                                            @Html.ValidationMessageFor(model => model.DueAmount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>Total Due Amount</label>
                                            @Html.EditorFor(model => model.TotaldueAmount, new { htmlAttributes = new { @class = "form-control",@id= "TotaldueAmount" } })
                                            @Html.ValidationMessageFor(model => model.TotaldueAmount, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Late Days</label>
                                            @Html.EditorFor(model => model.LateDays, new { htmlAttributes = new { @class = "form-control",@id= "LateDays" } })
                                            @Html.ValidationMessageFor(model => model.LateDays, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Late Days Amount</label>
                                            @Html.EditorFor(model => model.LateDaysAmount, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.LateDaysAmount, "", new { @class = "text-danger" })
                                        </div>                                       
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>Penalty</label>
                                            @Html.EditorFor(model => model.Penalty, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Penalty, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Discount</label>
                                            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>NetAmount</label>
                                            @Html.EditorFor(model => model.NetAmount, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.NetAmount, "", new { @class = "text-danger" })
                                        </div>


                                    </div>
                                </div>
                                        <div class="text-right">
                                            <button type="submit" value="Create" class="btn btn-success">Submit</button>
                                            @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                                        </div>
                                    </div>
                                </div>

                            </div>
                    </div>
                
            }

        </div>
    </div>
</div>
<script>
   $(document).ready(function () {
       $("#vehicleLoanId").change(function () {
            var name = $(this).find('option:selected').val();
           Name(name);
        })
       var days = daysdifference('03/19/2021', '03/31/2021')
    });
    function Name(name) {
              $.ajax({
            type: 'POST',
            url: '@Url.Content("~/VechicleLoanCollections/Name")',
            dataType: 'json',
            data: { NAME: name },
                  success: function (result) {
                      console.log(result)
                      debugger
                var data = result;
                      $("#DueDate").empty();
                      $("#Name").empty();
                      if (data.length > 0) {
                          for (var i = 0; i < data.length; i++) {
                              var tempData = {};
                              if (data[i].dateOfDue != null) { tempData.dateOfDue = DateConvertion(data[i].dateOfDue) } else tempData.dateOfDue = "";

                              $("#Name").val(data[i].Customer.customerName)
                              $("#Address").val(data[i].Customer.customerAddress)
                              $("#PhoneNo").val(data[i].Customer.contactNo)
                              $("#VechicleNumber").val(data[i].vehicleNo)
                              $("#NumberOfInstallmentsId").val(data[i].numberOfInstallments)
                              $("#PrincipleAmount").val(data[i].amountOfLoan)
                              $("#IntrestAmount").val(data[i].amountOfIntrest)
                              $("#DueAmount").val(data[i].dueAmount)
                              $("#DueDate").val(tempData.dateOfDue);

                              let amount = parseInt(data[i].amountOfIntrest) + parseInt(data[i].dueAmount);
                              $("#TotaldueAmount").val(amount);
                              let interest = $('#CollectionDate').val();
                              let latedays = Date(interest) - Date(tempData.dateOfDue);
                              $("#LateDays").val(latedays);

                          }
                      }
            },
            error: function (err) {
                console.log(err);
            }
        });
    };
    function daysdifference(firstDate, secondDate) {
        var startDay = new Date(firstDate);
        var endDay = new Date(secondDate);

        // Determine the time difference between two dates     
        var millisBetween = startDay.getTime() - endDay.getTime();

        // Determine the number of days between two dates  
        var days = millisBetween / (1000 * 3600 * 24);

        // Show the final number of days between dates     
        return Math.round(Math.abs(days));
    }  
  
</script>        
